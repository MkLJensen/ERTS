// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _advios_HH_
#define _advios_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "advios_periodic_Incrementer.h"
#include "advios_led_Controller.h"

namespace ap_rtl {

struct advios : public sc_module {
    // Port declarations 5
    sc_in_clk clk;
    sc_in< sc_logic > reset;
    sc_in< sc_lv<4> > ctrl;
    sc_in< sc_lv<4> > inSwitch;
    sc_out< sc_lv<4> > outLeds;


    // Module declarations
    advios(sc_module_name name);
    SC_HAS_PROCESS(advios);

    ~advios();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    advios_periodic_Incrementer* grp_advios_periodic_Incrementer_fu_80;
    advios_led_Controller* grp_advios_led_Controller_fu_104;
    sc_signal< sc_lv<1> > advios_ssdm_threa_load_fu_128_p1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<28> > grp_advios_periodic_Incrementer_fu_80_advios_count_V;
    sc_signal< sc_logic > grp_advios_periodic_Incrementer_fu_80_advios_count_V_ap_vld;
    sc_signal< sc_logic > grp_advios_periodic_Incrementer_fu_80_sec_pulse;
    sc_signal< sc_logic > grp_advios_periodic_Incrementer_fu_80_sec_pulse_ap_vld;
    sc_signal< sc_lv<4> > grp_advios_led_Controller_fu_104_outLeds;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_outLeds_ap_vld;
    sc_signal< sc_lv<4> > grp_advios_led_Controller_fu_104_advios_switchs_V;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_advios_switchs_V_ap_vld;
    sc_signal< sc_lv<4> > grp_advios_led_Controller_fu_104_advios_control_V;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_advios_control_V_ap_vld;
    sc_signal< sc_lv<4> > grp_advios_led_Controller_fu_104_advios_sec_counter_V_o;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_advios_sec_counter_V_o_ap_vld;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_sec_pulse_i;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_sec_pulse_o;
    sc_signal< sc_logic > grp_advios_led_Controller_fu_104_sec_pulse_o_ap_vld;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > advios_sec_counter_V;
    sc_signal< sc_lv<1> > sec_pulse;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_advios_sec_counter_V();
    void thread_outLeds();
    void thread_sec_pulse();
    void thread_advios_ssdm_threa_load_fu_128_p1();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_grp_advios_led_Controller_fu_104_sec_pulse_i();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
