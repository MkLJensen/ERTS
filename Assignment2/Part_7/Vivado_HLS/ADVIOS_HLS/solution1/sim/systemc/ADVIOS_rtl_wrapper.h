//RTL Wrapper auto-generated by Vivado HLS.
#include "ADVIOS.h"


SC_MODULE(ADVIOS_rtl_wrapper) {

    //ESL interface.

    sc_in<bool > clk;

    sc_in<bool > reset;

    sc_in<sc_uint<4> > ctrl;

    sc_in<sc_uint<4> > inSwitch;

    sc_out<sc_uint<4> > outLeds;

    //RTL interface signals.


    sc_signal<sc_logic > rtl_reset;

    sc_signal<sc_lv<4> > rtl_ctrl;

    sc_signal<sc_lv<4> > rtl_inSwitch;

    sc_signal<sc_lv<4> > rtl_outLeds;


ADVIOS* ADVIOS_inst;

    SC_CTOR(ADVIOS_rtl_wrapper) { 

        ADVIOS_inst = new ADVIOS("ADVIOS_rtl_inst");


        initInstances(ADVIOS_inst);

        SC_METHOD(signal_connection);

        sensitive<<clk<<reset<<ctrl<<inSwitch<<rtl_outLeds;

    }

    ~ADVIOS_rtl_wrapper() {

    delete ADVIOS_inst;

    }

    void initInstances(ADVIOS * ADVIOS_inst) {

        //The RTL model.

        
        ADVIOS_inst->clk(clk);

        ADVIOS_inst->reset(rtl_reset);

        ADVIOS_inst->ctrl(rtl_ctrl);

        ADVIOS_inst->inSwitch(rtl_inSwitch);

        ADVIOS_inst->outLeds(rtl_outLeds);

    }


    void signal_connection() {


        rtl_reset.write((sc_logic)(reset.read()));

        rtl_ctrl.write((sc_lv<4>)(ctrl.read()));

        rtl_inSwitch.write((sc_lv<4>)(inSwitch.read()));

        outLeds.write((sc_lv<4>)(rtl_outLeds.read()));


    }

};
